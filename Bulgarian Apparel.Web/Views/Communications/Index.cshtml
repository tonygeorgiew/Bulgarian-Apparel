@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Lets Chat</h2>
<link href="~/Content/sweetalert.css" rel="stylesheet" />

<div class="form-group col-xl-12">
    <label class="control-label">Your connection Id</label><br />
    <input type="text" class="col-lg-12 text-primary" id="frndConnId" placeholder="Paste your friend's connection Id" /><br /><br />
    <label class="control-label">Your Message</label><br />
    <textarea type="text" class="col-lg-10 text-primary" id="message"></textarea>

    <input type="button" class="btn btn-primary" id="sendmessage" value="Send" /><br /><br />
    <img src="~/Content/smile.jpg" width="20" height="20" id="smile" style="cursor:pointer" />
    <img src="~/Content/uff.jpg" width="20" height="20" id="ufff" style="cursor:pointer" />
    <div class="container chatArea">
        <input type="hidden" id="displayname" />
        <ul id="discussion"></ul>
    </div>
</div>
<br />
<input type="hidden" id="connId" />

<!--Reference the autogenerated SignalR hub script. -->
@section scripts {
    
@Scripts.Render("~/bundles/signalr")
@Scripts.Render("/signalr/hubs")
<script>

    //var userName = "";
    //var sessionVal = '';
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.letsChatHub;

        debugger;

        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message) {
            // Add the message to the page.
            $('#discussion').append('<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + '</li>');
        };
        // Get the user name and store it to prepend to messages.
        swal({
            title: "Lets Chat!",
            text: "<span style='color:#f8bb86;font-weight:700;'>Enter your name:</span>",
            type: "input",
            html: true,
            showCancelButton: true,
            closeOnConfirm: true,
            animation: "slide-from-top",
            inputPlaceholder: "Your Name"
        },
            function (inputValue) {
                userName = inputValue;
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showInputError("You need to type your name!");
                    return false;
                }
                $('#displayname').val(inputValue);
            });
        // Set initial focus to message input box.
        $('#message').focus();
        $('#message').keypress(function (e) {
            if (e.which == 13) {//Enter key pressed
                $('#sendmessage').trigger('click');//Trigger search button click event
            }
        });
        $("#smile").click(function () {

        });
        // Start the connection.
        $.connection.hub.start().done(function () {

            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                var connId = $("#connId").val();
                var frndConnId = $("#frndConnId").val();
                var finalConnId = frndConnId == "" ? $.connection.hub.id : frndConnId;
                chat.server.send($('#displayname').val(), $('#message').val(), finalConnId);
                $("#connId").val($.connection.hub.id);
                if (frndConnId == "") {
                    swal("You connection Id", $.connection.hub.id, "success");
                }
                // Clear text box and reset focus for next comment.
                $('#discussion').append('<li><strong>' + htmlEncode($('#displayname').val())
                    + '</strong>: ' + htmlEncode($('#message').val()) + '</li>');
                $('#message').val('').focus();
            });
        });

    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>
}  