@using Bulgarian_Apparel.Web.Models.Products
@model NewProductAddVM
@{
    ViewBag.Title = "Add Product - Bulgarian Apparel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="jumbotron">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Supplier, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Supplier, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Supplier, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
          <div>
              <div class="form-group">
                  @Html.LabelFor(m => m.SelectedSizes)
                  <div class="col-md-10">
                      @Html.ListBoxFor(m => m.SelectedSizes, new MultiSelectList(Model.Sizes, "Id", "Name"), null)
                  </div>
              </div>
              <div class="form-group">
                  @Html.LabelFor(m => m.SelectedColors)
                  <div class="col-md-10">
                      @Html.ListBoxFor(m => m.SelectedColors, new MultiSelectList(Model.Colors, "Id", "Name"), null)
                  </div>
              </div>
              <div class="form-group">
                  <div class="col-md-10">
                      @Html.LabelFor(m => m.Images)
                      @Html.EditorFor(m => m.Images[0], new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                      @Html.EditorFor(m => m.Images[1], new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                      @Html.EditorFor(m => m.Images[2], new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                  </div>
              </div>
          </div>
           


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
   
</div>












@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
}